{"ast":null,"code":"var _jsxFileName = \"/Users/thalita.monteiro/Documents/development/Estudos/React/formulario-cadastro/src/components/formulario-cadastro/DadosPessoais.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { TextField, Button, Switch, FormControlLabel } from '@material-ui/core';\nimport ValidacoesCadastro from '../../contexts/ValidacoesCadastro';\nimport useErros from '../../hooks/useErros';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DadosPessoais({\n  aoEnviar\n}) {\n  _s();\n\n  const [nome, setNome] = useState(\"\");\n  const [sobrenome, setSobrenome] = useState(\"\");\n  const [cpf, setCPF] = useState(\"\");\n  const [promocoes, setPromocoes] = useState(true);\n  const [novidades, setNovidades] = useState(false);\n  const validacoes = useContext(ValidacoesCadastro);\n  const [erros, validarCampos, possoEnviar] = useErros(validacoes);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n\n      if (possoEnviar()) {\n        aoEnviar({\n          nome,\n          sobrenome,\n          cpf,\n          novidades,\n          promocoes\n        });\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"nome\",\n      name: \"nome\",\n      label: \"Nome\",\n      variant: \"outlined\",\n      fullWidth: true,\n      margin: \"normal\",\n      value: nome,\n      error: erros.nome.valido,\n      helperText: erros.nome.texto,\n      onChange: evento => {\n        setNome(evento.target.value);\n      },\n      onBlur: validarCampos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"sobrenome\",\n      label: \"Sobrenome\",\n      variant: \"outlined\",\n      fullWidth: true,\n      margin: \"normal\",\n      value: sobrenome,\n      onChange: evento => {\n        setSobrenome(evento.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"CPF\",\n      name: \"cpf\",\n      label: \"CPF\",\n      variant: \"outlined\",\n      fullWidth: true,\n      margin: \"normal\",\n      value: cpf,\n      error: erros.cpf.valido,\n      helperText: erros.cpf.texto,\n      onChange: evento => {\n        setCPF(evento.target.value);\n      },\n      onBlur: validarCampos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      label: \"Promo\\xE7\\xF5es\",\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: promocoes,\n        name: \"promocoes\",\n        color: \"primary\",\n        onChange: evento => {\n          setPromocoes(evento.target.checked);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      label: \"Novidades\",\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: novidades,\n        name: \"novidades\",\n        color: \"primary\",\n        onChange: evento => {\n          setNovidades(evento.target.checked);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Pr\\xF3ximo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DadosPessoais, \"9GA4xcBPyR6MXsCSW2+A8DYVKN0=\", false, function () {\n  return [useErros];\n});\n\n_c = DadosPessoais;\nexport default DadosPessoais;\n\nvar _c;\n\n$RefreshReg$(_c, \"DadosPessoais\");","map":{"version":3,"sources":["/Users/thalita.monteiro/Documents/development/Estudos/React/formulario-cadastro/src/components/formulario-cadastro/DadosPessoais.jsx"],"names":["React","useState","useContext","TextField","Button","Switch","FormControlLabel","ValidacoesCadastro","useErros","DadosPessoais","aoEnviar","nome","setNome","sobrenome","setSobrenome","cpf","setCPF","promocoes","setPromocoes","novidades","setNovidades","validacoes","erros","validarCampos","possoEnviar","event","preventDefault","valido","texto","evento","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport {TextField, Button, Switch, FormControlLabel} from '@material-ui/core';\nimport ValidacoesCadastro from '../../contexts/ValidacoesCadastro';\nimport useErros from '../../hooks/useErros';\n\nfunction DadosPessoais({aoEnviar}){\n    const [nome,  setNome] = useState(\"\");\n    const [sobrenome, setSobrenome] = useState(\"\");\n    const [cpf, setCPF] = useState(\"\");\n    const [promocoes, setPromocoes] = useState(true);\n    const [novidades, setNovidades] = useState(false);\n\n    const validacoes = useContext(ValidacoesCadastro);\n    const [erros, validarCampos, possoEnviar] = useErros(validacoes);\n\n    return(\n        <form onSubmit={(event) => {\n            event.preventDefault();\n            if(possoEnviar()){\n                aoEnviar({nome, sobrenome, cpf, novidades, promocoes});\n            }\n            \n        }}>\n            <TextField id=\"nome\" name=\"nome\" label=\"Nome\" variant=\"outlined\"  fullWidth margin=\"normal\" \n                value={nome}\n                error={erros.nome.valido}\n                helperText={erros.nome.texto}\n                onChange={(evento)=> {\n                    setNome(evento.target.value)\n                }}\n                onBlur={validarCampos}/>\n\n            <TextField id=\"sobrenome\" label=\"Sobrenome\" variant=\"outlined\" fullWidth margin=\"normal\"\n                value={sobrenome}\n                onChange={(evento)=> {\n                    setSobrenome(evento.target.value)\n                }}/>\n\n            <TextField id=\"CPF\" name=\"cpf\" label=\"CPF\" variant=\"outlined\" fullWidth margin=\"normal\"\n                value={cpf}\n                error={erros.cpf.valido}\n                helperText={erros.cpf.texto}\n                onChange={(evento)=> {\n                    setCPF(evento.target.value)\n                }}\n                onBlur={validarCampos}\n                />\n\n            <FormControlLabel label=\"Promoções\"\n                control={\n                    <Switch\n                        checked={promocoes}\n                        name=\"promocoes\"\n                        color=\"primary\"\n                        onChange={(evento)=> {\n                            setPromocoes(evento.target.checked)\n                        }}\n                    />\n                }\n            />\n\n            <FormControlLabel label=\"Novidades\"\n                control={\n                    <Switch\n                        checked={novidades}\n                        name=\"novidades\"\n                        color=\"primary\"\n                        onChange={(evento)=> {\n                            setNovidades(evento.target.checked)\n                        }}\n                    />\n                }\n            />\n\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                Próximo\n            </Button>\n        </form>\n    );\n}\n\nexport default DadosPessoais;"]},"metadata":{},"sourceType":"module"}