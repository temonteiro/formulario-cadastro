{"ast":null,"code":"var _jsxFileName = \"/Users/thalita.monteiro/Documents/development/Estudos/React/formulario-cadastro/src/components/formulario-cadastro/DadosUsuario.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DadosUsuario({\n  aoEnviar,\n  validacoes\n}) {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [erros, setErros] = useState({\n    senha: {\n      valido: false,\n      texto: \"\"\n    }\n  });\n\n  function validarCampos(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    const novoEstado = { ...erros\n    };\n    novoEstado[name] = validacoes[name](value);\n    setErros(novoEstado);\n  }\n\n  function possoEnviar() {\n    for (let campo in erros) {\n      if (erros[campo].valido) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n\n      if (possoEnviar()) {\n        aoEnviar({\n          email,\n          senha\n        });\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"email\",\n      name: \"email\",\n      label: \"email\",\n      type: \"email\",\n      variant: \"outlined\",\n      fullWidth: true,\n      margin: \"normal\",\n      required: true,\n      value: email,\n      onChange: event => {\n        setEmail(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"senha\",\n      name: \"senha\",\n      label: \"senha\",\n      type: \"password\",\n      variant: \"outlined\",\n      fullWidth: true,\n      margin: \"normal\",\n      required: true,\n      value: senha,\n      error: erros.senha.valido,\n      helperText: erros.senha.texto,\n      onChange: event => {\n        setSenha(event.target.value);\n      },\n      onBlur: validarCampos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Pr\\xF3ximo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DadosUsuario, \"tAWcpKVamFK0+Zh40LA0L5s6p+A=\");\n\n_c = DadosUsuario;\nexport default DadosUsuario;\n\nvar _c;\n\n$RefreshReg$(_c, \"DadosUsuario\");","map":{"version":3,"sources":["/Users/thalita.monteiro/Documents/development/Estudos/React/formulario-cadastro/src/components/formulario-cadastro/DadosUsuario.jsx"],"names":["Button","TextField","React","useState","DadosUsuario","aoEnviar","validacoes","email","setEmail","senha","setSenha","erros","setErros","valido","texto","validarCampos","event","name","value","target","novoEstado","possoEnviar","campo","preventDefault"],"mappings":"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","sourcesContent":["import { Button, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\n\nfunction DadosUsuario({ aoEnviar, validacoes }){\n\n    const [email, setEmail] = useState(\"\");\n    const [senha, setSenha] = useState(\"\");\n    const [erros, setErros] = useState({senha: {valido: false, texto: \"\"}});\n\n    function validarCampos(event){\n        const {name, value} = event.target;\n        const novoEstado = {...erros};\n        novoEstado[name] = validacoes[name](value);\n        setErros(novoEstado);\n    }\n\n    function possoEnviar(){\n        for(let campo in erros){\n            if(erros[campo].valido){\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    return(\n        <form onSubmit={(event) => {\n            event.preventDefault();\n            if(possoEnviar()){\n                aoEnviar({ email, senha });\n            }\n            \n        }}>\n            <TextField id=\"email\" name=\"email\" label=\"email\" type=\"email\" variant=\"outlined\"  fullWidth margin=\"normal\" required\n                value={email}\n                onChange={(event) => {\n                    setEmail(event.target.value);\n                  }}/>\n\n            <TextField id=\"senha\" name=\"senha\" label=\"senha\" type=\"password\" variant=\"outlined\"  fullWidth margin=\"normal\" required\n                value={senha}\n                error={erros.senha.valido}\n                helperText={erros.senha.texto}\n                onChange={(event) => {\n                    setSenha(event.target.value);\n                  }}\n                onBlur={validarCampos}/>\n\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Pr√≥ximo</Button>\n        </form>\n    );\n}\n\nexport default DadosUsuario;"]},"metadata":{},"sourceType":"module"}